# Кривощек Андрей Дмитриевич krivoshcek@gmail.com 
# 1. Создать программно файл в текстовом формате, записать в него построчно данные,
# вводимые пользователем. Об окончании ввода данных свидетельствует пустая строка.

# file = open('123.txt', 'w+')
# while  True:
#     i = file.write(input('Введите текст: '))
#     file.writelines('\n') # знаю что тупо, но ничего другого пока не придумал...
#     if not i:
#         file.close()
#         print('Ввод данных окончен')
#         break

# 2. Создать текстовый файл (не программно), сохранить в нем несколько строк, выполнить
# подсчет количества строк, количества слов в каждой строке.

# with open('123.txt') as f:
#     for i, y in enumerate(f.readlines()):
#         print('Количество слов в {}й строке равно {} '.format(i+1, y.count(' ') + 1))

# 3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину
# их окладов. Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих
# сотрудников. Выполнить подсчет средней величины дохода сотрудников.
# С русскими букавками в файле не робит(
# looser = []
# average = 0
# count = 0
# with open('123.txt') as f:
#     for i in f:
#         i = dict([i.split()])
#         if int(*i.values()) < 20:
#             looser.append(i)
#             average += int(*i.values())
#             count += 1
#         else:
#             average += int(*i.values())
#             count += 1
# print('Самый низкий доход имеют следующие сотрудники: ')
# for i in looser:
#     print(*i)
# print(f'Средний доход составляет {average / count} денежек')

# Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Необходимо написать программу, открывающую файл на чтение и считывающую
# построчно данные. При этом английские числительные должны заменяться на
# русские. Новый блок строк должен записываться в новый текстовый файл.

# my_dict = {'One': 'Один', 'Two':'Два', 'Three':'Три', 'Four':'Четыре'}
# with open('123.txt') as f:
#     for i in f:
#         i = i.split()
#         i[0] = my_dict.get(i[0])
#         file = open('345.txt', 'a')
#         file.writelines(i)
#         file.writelines('\n')
#         file.close()

# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.

# file = open('123.txt', 'r+')
# file.write(input('Введите числа: \n'))
# file.close()
# i = open('123.txt')
# sum = 0
# with open('123.txt') as f:
#     for i in f:
#         i = i.split()
#         for n in i:
#             sum += int(n)
# print(sum)

# 6. Необходимо создать (не программно) текстовый файл, где каждая строка
# описывает учебный предмет и наличие лекционных, практических и лабораторных
# занятий по этому предмету и их количество. Важно, чтобы для каждого предмета
# не обязательно были все типы занятий. Сформировать словарь, содержащий название
# предмета и общее количество занятий по нему. Вывести словарь на экран
# import re
#
# my_dict = {}
# with open('123.txt', encoding='utf-8') as f:
#     for i in f:
#         i = i.split()
#         sum_elem = sum(int(n) for n in re.findall('\d{1,4}', str(i)))
#         buf = [i[0], sum_elem]
#         my_dict.update([buf])
# print(my_dict)

# 7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать
# данные о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю
# прибыль. Если фирма получила убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также
# словарь со средней прибылью. Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

# Подсказка: использовать менеджеры контекста.
# import json
# import re
# my_dict = {}
# my_avg = {}
# average = 0
# with open('123.txt', encoding='utf-8') as f:
#     for i in f:
#         elem = re.findall('\d{2,10}', str(i))
#         profit = int(elem[0]) - int(elem[1])
#         i = i.split()
#         if profit > 0:
#             buf = [i[0], profit] # типа буфер)
#             my_dict.update([buf])
# 
# for i in my_dict.values():
#     average += i
# my_avg.setdefault('average', average)
# my_list = [my_dict, my_avg]
# with open('my_file.json', 'w', encoding='utf-8') as f:
#     json.dump(my_list, f)
